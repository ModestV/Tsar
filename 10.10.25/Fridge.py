from decimal import Decimal
import datetime

goods = {}


def add(product_name: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ (–∫–ª—é—á –≤ —Å–ª–æ–≤–∞—Ä—å)."""
    if product_name in goods:
        print("–¢–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç —É–∂–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ")
    else:
        goods[product_name] = []


def add_by_note(product_name: str, amount, expiration_date: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä—Ç–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏ —Å—Ä–æ–∫–æ–º –≥–æ–¥–Ω–æ—Å—Ç–∏."""
    # –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ (–±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è)
    if product_name not in goods:
        goods[product_name] = []

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –¥–∞—Ç—É
    amount_decimal = Decimal(str(amount))
    date_obj = datetime.datetime.strptime(expiration_date, "%Y-%m-%d").date()

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–∞—Ä—Ç–∏—é
    goods[product_name].append({
        "amount": amount_decimal,
        "expiration_date": date_obj
    })


def find(word: str):
    """–ò—â–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ (–±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞) –∏ –ø–µ—á–∞—Ç–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    word = word.strip().lower()
    found = [name for name in goods if word in name.lower()]
    if not found:
        print(f"–ü–æ –∑–∞–ø—Ä–æ—Å—É '{word}' –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        print("–ù–∞–π–¥–µ–Ω–æ:")
        for name in found:
            print("  -", name)
    return found



def amount(product_name: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞."""
    if product_name not in goods:
        print(f"–ü—Ä–æ–¥—É–∫—Ç '{product_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ.")
        return

    total = sum(batch['amount'] for batch in goods[product_name])
    print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ '{product_name}': {total}")


def show_fridge():
    """–ö—Ä–∞—Å–∏–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞."""
    if not goods:
        print("–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø—É—Å—Ç üò¢")
        return

    for product, batches in goods.items():
        print(f"\n{product}:")
        for i, batch in enumerate(batches, start=1):
            print(f"    –ü–æ—Å—Ç–∞–≤–∫–∞ {i}:")
            print(f"        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {batch['amount']}")
            print(f"        –ì–æ–¥–µ–Ω –¥–æ: {batch['expiration_date']}")
    print()  # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ü–µ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã



while 1:
    a = ''
    b = ''
    c = None
    action = None
    print()
    print('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: \n4. –£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ.\n3. –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.\n2. –î–æ–±–∞–≤–∏—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø—Ä–æ–¥—É–∫—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.\n'
          '1. –î–æ–±–∞–≤–∏—Ç—å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø—Ä–æ–¥—É–∫—Ç.\n0. –ó–∞–∫–æ–Ω—á–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞.')
    print()
    action = input()
    if action == '0':
        show_fridge()
        break
    elif action == '1':
        add(input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: '))
    elif action == '2':
        add_by_note(input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: '),float(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞: ')),input('–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ (YYYY-MM-DD) –ø—Ä–æ–¥—É–∫—Ç–∞: '))
    elif action == '3':
        find(input('–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞: '))
    elif action == '4':
        amount(input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: '))
